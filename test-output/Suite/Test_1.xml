<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-RC1L530" failures="0" tests="3" name="Test_1" time="0.313" errors="0" timestamp="2025-06-19T12:22:02 IST">
  <testcase classname="BaseClassUtility.BaseClass" name="@BeforeSuite connectionWithDB" time="1.145">
    <failure type="java.sql.SQLSyntaxErrorException" message="Unknown database &amp;apos;advproject&amp;apos;">
      <![CDATA[java.sql.SQLSyntaxErrorException: Unknown database 'advproject'
at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:682)
at java.sql/java.sql.DriverManager.getConnection(DriverManager.java:230)
at GenericUtilities.DatabaseUtility.getDatabaseConnection(DatabaseUtility.java:45)
at BaseClassUtility.BaseClass.connectionWithDB(BaseClass.java:37)
... Removed 17 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeSuite connectionWithDB -->
  <testcase classname="BaseClassUtility.BaseClass" name="@BeforeTest configParallelExe" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest configParallelExe -->
  <testcase classname="BaseClassUtility.BaseClass" name="@BeforeClass LaunchTheBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeClass LaunchTheBrowser -->
  <testcase classname="BaseClassUtility.BaseClass" name="@BeforeMethod login" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="BaseClassUtility.BaseClass" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="BaseClassUtility.BaseClass" name="@BeforeMethod login" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="BaseClassUtility.BaseClass" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="BaseClassUtility.BaseClass" name="@BeforeMethod login" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod login -->
  <testcase classname="BaseClassUtility.BaseClass" name="@AfterMethod logout" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="BaseClassUtility.BaseClass" name="@AfterClass closeTheBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass closeTheBrowser -->
  <testcase classname="BaseClassUtility.BaseClass" name="@AfterTest closeParallelExe" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest closeParallelExe -->
  <testcase classname="OrganizationModel.OrgScenariosTest" name="CreateOrgWithPhno" time="0.001">
    <skipped/>
  </testcase> <!-- CreateOrgWithPhno -->
  <testcase classname="OrganizationModel.OrgScenariosTest" name="CreateOrganizationAndType" time="0.0">
    <skipped/>
  </testcase> <!-- CreateOrganizationAndType -->
  <testcase classname="OrganizationModel.OrgScenariosTest" name="createOrg" time="0.0">
    <skipped/>
  </testcase> <!-- createOrg -->
</testsuite> <!-- Test_1 -->
